package checks

import "hana/db"

type Check struct {
	Name           string
	Description    string
	Link           string
	Recommendation string
	Query          string
	Results        db.Results
	Parameters     []string
	Result         bool
}

type entity struct {
	Type       string
	Name       string
	Privileges []string
}

const (
	checkSystemUser              string = `SELECT USER_NAME, USER_DEACTIVATED, DEACTIVATION_TIME, LAST_SUCCESSFUL_CONNECT FROM "PUBLIC".USERS WHERE USER_NAME = 'SYSTEM'`
	checkPasswordLifetime        string = `SELECT	USER_NAME, USER_DEACTIVATED, DEACTIVATION_TIME, LAST_SUCCESSFUL_CONNECT FROM "PUBLIC".USERS WHERE IS_PASSWORD_LIFETIME_CHECK_ENABLED = 'FALSE'`
	systemPrivileges             string = `SELECT DISTINCT GRANTEE, GRANTEE_TYPE, PRIVILEGE FROM EFFECTIVE_PRIVILEGE_GRANTEES WHERE OBJECT_TYPE = 'SYSTEMPRIVILEGE' AND PRIVILEGE IN (%s) AND GRANTEE NOT IN ('SYSTEM', '_SYS_REPO') AND GRANTEE NOT IN ('SYSTEM', '_SYS_REPO')`
	criticalCombinations         string = `SELECT DISTINCT USER_NAME, PRIVILEGE FROM "PUBLIC"."EFFECTIVE_PRIVILEGES" WHERE OBJECT_TYPE = 'SYSTEMPRIVILEGE' AND (%s)`
	dataAdmin                    string = `SELECT * FROM EFFECTIVE_PRIVILEGE_GRANTEES WHERE OBJECT_TYPE = 'SYSTEMPRIVILEGE' AND PRIVILEGE = '%s' AND GRANTEE NOT IN ('SYSTEM','_SYS_REPO');`
	analyticPrivilege            string = `SELECT * FROM EFFECTIVE_PRIVILEGE_GRANTEES WHERE OBJECT_TYPE = 'ANALYTICALPRIVILEGE' AND OBJECT_NAME = '%s' AND PRIVILEGE = 'EXECUTE' AND GRANTEE NOT IN ('SYSTEM','MODELING', 'CONTENT_ADMIN');`
	debugPrivilege               string = `SELECT * FROM GRANTED_PRIVILEGES WHERE PRIVILEGE='%s' OR PRIVILEGE='ATTACH DEBUGGER';`
	predefinedCatalogRole        string = `SELECT * FROM GRANTED_ROLES WHERE ROLE_NAME = '%s' AND GRANTEE NOT IN ('SYSTEM');`
	predefinedCatalogRoleGeneral string = `SELECT * FROM EFFECTIVE_ROLE_GRANTEES WHERE ROLE_NAME = '%s';`
	_pre_userParameterClient     string = `SELECT * FROM "M_INIFILE_CONTENTS" WHERE KEY='secure_client_parameter';`
	userParameterClient          string = `SELECT * FROM EFFECTIVE_PRIVILEGE_GRANTEES WHERE OBJECT_TYPE = 'SYSTEMPRIVILEGE' AND PRIVILEGE = 'CLIENT PARAMETER ADMIN';`
	_pre_osFsPermissions         string = `SELECT * FROM "PUBLIC"."M_INIFILE_CONTENTS" WHERE SECTION = 'import_export' AND KEY = 'file_security';`
	osFsPermissions              string = `SELECT * FROM EFFECTIVE_PRIVILEGE_GRANTEES WHERE (OBJECT_TYPE = 'SYSTEMPRIVILEGE') AND (PRIVILEGE = 'EXPORT' OR PRIVILEGE='IMPORT');`
	auditing                     string = `SELECT VALUE FROM "PUBLIC"."M_INIFILE_CONTENTS" WHERE SECTION = 'auditing configuration' AND KEY = 'global_auditing_state'`
)

var (
	CheckList        []*Check
	userNames        []string
	PREDEFINED_USERS = []string{"SYSTEM", "SYS", "_SYS_AFL", "_SYS_EPM", "_SYS_REPO", "_SYS_SQL_ANALYZER", "_SYS_STATISTICS", "_SYS_TASK", "_SYS_WORKLOAD_REPLAY", "_SYS_XB", "_SYS_TABLE_REPLICAS", "SYS_TABLE_REPLICA_DATA"}
	ADMIN_PRIVILEGES = []string{"CATALOG READ", "TRACE ADMIN", "ADAPTER ADMIN", "AGENT ADMIN", "AUDIT ADMIN", "AUDIT OPERATOR", "BACKUP ADMIN", "BACKUP OPERATOR", "CERTIFICATE ADMIN", "CREATE REMOTE SOURCE", "CREDENTIAL ADMIN", "ENCRYPTION ROOT KEY ADMIN", "EXTENDED STORAGE ADMIN", "INIFILE ADMIN", "LDAP ADMIN", "LICENSE ADMIN", "LOG ADMIN", "MONITOR ADMIN", "OPTIMIZER ADMIN", "RESOURCE ADMIN", "SAVEPOINT ADMIN", "SERVICE ADMIN", "SESSION ADMIN", "SSL ADMIN", "TABLE ADMIN", "TRUST ADMIN", "VERSION ADMIN", "WORKLOAD ADMIN", "WORKLOAD ANALYZE ADMIN", "WORKLOAD CAPTURE ADMIN", "WORKLOAD REPLAY ADMIN"}
	DANGEROUS_COMBO  = [][]string{
		{"USER ADMIN", "ROLE ADMIN"},
		// {"USER ADMIN", "INIFILE ADMIN"}, // this is safe, only for testing purposesS
		{"CREATE SCENARIO", "SCENARIO ADMIN"},
		{"AUDIT ADMIN", "AUDIT OPERATOR"},
		{"CREATE STRUCTURED PRIVILEGE", "STRUCTUREDPRIVILEGE ADMIN"},
	}
)
